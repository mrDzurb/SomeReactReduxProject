{"version":3,"sources":["webpack:///tether/8e0b277d0f94c7c6d67d.bundle.js","webpack:///./node_modules/tether/dist/js/tether.js"],"names":["webpackJsonp","6BCL","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","call","this","require","_classCallCheck","instance","Constructor","TypeError","getActualBoundingClientRect","node","boundingRect","getBoundingClientRect","rect","k","ownerDocument","document","_frameElement","defaultView","frameElement","frameRect","top","bottom","left","right","getScrollParents","el","computedStyle","getComputedStyle","position","parents","parent","parentNode","nodeType","style","err","push","_style","overflow","overflowX","test","overflowY","indexOf","body","removeUtilElements","zeroElement","removeChild","getBounds","doc","documentElement","docEl","box","origin","getOrigin","width","scrollWidth","height","scrollHeight","clientTop","clientLeft","clientWidth","clientHeight","getOffsetParent","offsetParent","getScrollBarSize","_scrollBarSize","inner","createElement","outer","extend","pointerEvents","visibility","appendChild","widthContained","offsetWidth","widthScroll","out","arguments","length","args","Array","prototype","apply","slice","forEach","obj","key","hasOwnProperty","removeClass","name","classList","split","cls","trim","remove","regex","RegExp","join","className","getClassName","replace","setClassName","addClass","add","hasClass","contains","SVGAnimatedString","baseVal","setAttribute","updateClasses","all","_inherits","subClass","superClass","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","within","a","b","diff","now","performance","Date","addOffset","_len","offsets","_key","_ref","parseFloat","offsetToPx","offset","size","getBoundingRect","tether","to","scrollParents","pageXOffset","pageYOffset","innerWidth","innerHeight","pos","win","BOUNDS_FORMAT","side","i","toUpperCase","substr","_createClass","defineProperties","target","props","descriptor","defineProperty","protoProps","staticProps","TetherBase","modules","uniqueId","id","zeroPosCache","getAttribute","defer","deferred","fn","flush","pop","Evented","event","handler","ctx","once","bindings","on","splice","_bindings$event$i","context","Utils","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","isArray","_get","_x6","_x7","_x8","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","getPrototypeOf","Error","_TetherBase$Utils","transformKey","transforms","tethers","lastCall","lastDuration","pendingTimeout","tick","Math","min","setTimeout","clearTimeout","window","addEventListener","MIRROR_LR","center","MIRROR_TB","middle","OFFSET_MAP","autoToFixedAttachment","attachment","relativeToAttachment","attachmentToOffset","parseOffset","_value$split","_value$split2","parseAttachment","TetherClass","_Evented","options","_this","bind","history","setOptions","initialize","classes","classPrefix","_this2","defaults","targetOffset","targetAttachment","_options","element","targetModifier","jquery","querySelector","getClass","addTargetClasses","disable","enabled","enable","bounds","hasBottomScroll","scrollBottom","borderTopWidth","borderBottomWidth","borderLeftWidth","fitAdj","pow","max","scrollPercentage","scrollTop","_cache","_this3","_this4","removeEventListener","_this5","elementAttach","targetAttach","_this6","sides","_addAttachClasses","_this7","flushChanges","clearCache","updateAttachClasses","elementPos","cache","lastSize","_lastSize","targetPos","getTargetBounds","targetSize","manualOffset","manualTargetOffset","_module2","ret","scrollbarSize","page","viewport","parentElement","optimizations","moveElement","offsetPosition","offsetParentStyle","offsetParentSize","offsetBorder","toLowerCase","scrollLeft","move","unshift","_this8","same","type","found","point","css","transcribe","_same","_pos","gpu","yPos","xPos","matchMedia","matches","round","moved","bodyElement","offsetParentIsBody","currentNode","tagName","writeCSS","write","val","trigger","Tether","constraints","targetHeight","targetWidth","allClasses","constraint","outOfBoundsClass","pinnedClass","addClasses","tAttachment","eAttachment","pin","changeAttachX","changeAttachY","_attachment$split","_attachment$split2","map","p","pinned","oob","oobClass","abutted","targetPosSide","shift","shiftTop","shiftLeft","_shift","_shift2"],"mappings":"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","file":"tether/8e0b277d0f94c7c6d67d.bundle.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ \"6BCL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! tether 1.4.3 */\n\n(function(root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require, exports, module);\n  } else {\n    root.Tether = factory();\n  }\n}(this, function(require, exports, module) {\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar TetherBase = undefined;\nif (typeof TetherBase === 'undefined') {\n  TetherBase = { modules: [] };\n}\n\nvar zeroElement = null;\n\n// Same as native getBoundingClientRect, except it takes into account parent <frame> offsets\n// if the element lies within a nested document (<frame> or <iframe>-like).\nfunction getActualBoundingClientRect(node) {\n  var boundingRect = node.getBoundingClientRect();\n\n  // The original object returned by getBoundingClientRect is immutable, so we clone it\n  // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9\n  var rect = {};\n  for (var k in boundingRect) {\n    rect[k] = boundingRect[k];\n  }\n\n  if (node.ownerDocument !== document) {\n    var _frameElement = node.ownerDocument.defaultView.frameElement;\n    if (_frameElement) {\n      var frameRect = getActualBoundingClientRect(_frameElement);\n      rect.top += frameRect.top;\n      rect.bottom += frameRect.top;\n      rect.left += frameRect.left;\n      rect.right += frameRect.left;\n    }\n  }\n\n  return rect;\n}\n\nfunction getScrollParents(el) {\n  // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  var computedStyle = getComputedStyle(el) || {};\n  var position = computedStyle.position;\n  var parents = [];\n\n  if (position === 'fixed') {\n    return [el];\n  }\n\n  var parent = el;\n  while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {\n    var style = undefined;\n    try {\n      style = getComputedStyle(parent);\n    } catch (err) {}\n\n    if (typeof style === 'undefined' || style === null) {\n      parents.push(parent);\n      return parents;\n    }\n\n    var _style = style;\n    var overflow = _style.overflow;\n    var overflowX = _style.overflowX;\n    var overflowY = _style.overflowY;\n\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n      if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {\n        parents.push(parent);\n      }\n    }\n  }\n\n  parents.push(el.ownerDocument.body);\n\n  // If the node is within a frame, account for the parent window scroll\n  if (el.ownerDocument !== document) {\n    parents.push(el.ownerDocument.defaultView);\n  }\n\n  return parents;\n}\n\nvar uniqueId = (function () {\n  var id = 0;\n  return function () {\n    return ++id;\n  };\n})();\n\nvar zeroPosCache = {};\nvar getOrigin = function getOrigin() {\n  // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of\n  // jitter as the user scrolls that messes with our ability to detect if two positions\n  // are equivilant or not.  We place an element at the top left of the page that will\n  // get the same jitter, so we can cancel the two out.\n  var node = zeroElement;\n  if (!node || !document.body.contains(node)) {\n    node = document.createElement('div');\n    node.setAttribute('data-tether-id', uniqueId());\n    extend(node.style, {\n      top: 0,\n      left: 0,\n      position: 'absolute'\n    });\n\n    document.body.appendChild(node);\n\n    zeroElement = node;\n  }\n\n  var id = node.getAttribute('data-tether-id');\n  if (typeof zeroPosCache[id] === 'undefined') {\n    zeroPosCache[id] = getActualBoundingClientRect(node);\n\n    // Clear the cache when this position call is done\n    defer(function () {\n      delete zeroPosCache[id];\n    });\n  }\n\n  return zeroPosCache[id];\n};\n\nfunction removeUtilElements() {\n  if (zeroElement) {\n    document.body.removeChild(zeroElement);\n  }\n  zeroElement = null;\n};\n\nfunction getBounds(el) {\n  var doc = undefined;\n  if (el === document) {\n    doc = document;\n    el = document.documentElement;\n  } else {\n    doc = el.ownerDocument;\n  }\n\n  var docEl = doc.documentElement;\n\n  var box = getActualBoundingClientRect(el);\n\n  var origin = getOrigin();\n\n  box.top -= origin.top;\n  box.left -= origin.left;\n\n  if (typeof box.width === 'undefined') {\n    box.width = document.body.scrollWidth - box.left - box.right;\n  }\n  if (typeof box.height === 'undefined') {\n    box.height = document.body.scrollHeight - box.top - box.bottom;\n  }\n\n  box.top = box.top - docEl.clientTop;\n  box.left = box.left - docEl.clientLeft;\n  box.right = doc.body.clientWidth - box.width - box.left;\n  box.bottom = doc.body.clientHeight - box.height - box.top;\n\n  return box;\n}\n\nfunction getOffsetParent(el) {\n  return el.offsetParent || document.documentElement;\n}\n\nvar _scrollBarSize = null;\nfunction getScrollBarSize() {\n  if (_scrollBarSize) {\n    return _scrollBarSize;\n  }\n  var inner = document.createElement('div');\n  inner.style.width = '100%';\n  inner.style.height = '200px';\n\n  var outer = document.createElement('div');\n  extend(outer.style, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    pointerEvents: 'none',\n    visibility: 'hidden',\n    width: '200px',\n    height: '150px',\n    overflow: 'hidden'\n  });\n\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  var widthContained = inner.offsetWidth;\n  outer.style.overflow = 'scroll';\n  var widthScroll = inner.offsetWidth;\n\n  if (widthContained === widthScroll) {\n    widthScroll = outer.clientWidth;\n  }\n\n  document.body.removeChild(outer);\n\n  var width = widthContained - widthScroll;\n\n  _scrollBarSize = { width: width, height: width };\n  return _scrollBarSize;\n}\n\nfunction extend() {\n  var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var args = [];\n\n  Array.prototype.push.apply(args, arguments);\n\n  args.slice(1).forEach(function (obj) {\n    if (obj) {\n      for (var key in obj) {\n        if (({}).hasOwnProperty.call(obj, key)) {\n          out[key] = obj[key];\n        }\n      }\n    }\n  });\n\n  return out;\n}\n\nfunction removeClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    name.split(' ').forEach(function (cls) {\n      if (cls.trim()) {\n        el.classList.remove(cls);\n      }\n    });\n  } else {\n    var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');\n    var className = getClassName(el).replace(regex, ' ');\n    setClassName(el, className);\n  }\n}\n\nfunction addClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    name.split(' ').forEach(function (cls) {\n      if (cls.trim()) {\n        el.classList.add(cls);\n      }\n    });\n  } else {\n    removeClass(el, name);\n    var cls = getClassName(el) + (' ' + name);\n    setClassName(el, cls);\n  }\n}\n\nfunction hasClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    return el.classList.contains(name);\n  }\n  var className = getClassName(el);\n  return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);\n}\n\nfunction getClassName(el) {\n  // Can't use just SVGAnimatedString here since nodes within a Frame in IE have\n  // completely separately SVGAnimatedString base classes\n  if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {\n    return el.className.baseVal;\n  }\n  return el.className;\n}\n\nfunction setClassName(el, className) {\n  el.setAttribute('class', className);\n}\n\nfunction updateClasses(el, add, all) {\n  // Of the set of 'all' classes, we need the 'add' classes, and only the\n  // 'add' classes to be set.\n  all.forEach(function (cls) {\n    if (add.indexOf(cls) === -1 && hasClass(el, cls)) {\n      removeClass(el, cls);\n    }\n  });\n\n  add.forEach(function (cls) {\n    if (!hasClass(el, cls)) {\n      addClass(el, cls);\n    }\n  });\n}\n\nvar deferred = [];\n\nvar defer = function defer(fn) {\n  deferred.push(fn);\n};\n\nvar flush = function flush() {\n  var fn = undefined;\n  while (fn = deferred.pop()) {\n    fn();\n  }\n};\n\nvar Evented = (function () {\n  function Evented() {\n    _classCallCheck(this, Evented);\n  }\n\n  _createClass(Evented, [{\n    key: 'on',\n    value: function on(event, handler, ctx) {\n      var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n      if (typeof this.bindings === 'undefined') {\n        this.bindings = {};\n      }\n      if (typeof this.bindings[event] === 'undefined') {\n        this.bindings[event] = [];\n      }\n      this.bindings[event].push({ handler: handler, ctx: ctx, once: once });\n    }\n  }, {\n    key: 'once',\n    value: function once(event, handler, ctx) {\n      this.on(event, handler, ctx, true);\n    }\n  }, {\n    key: 'off',\n    value: function off(event, handler) {\n      if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {\n        return;\n      }\n\n      if (typeof handler === 'undefined') {\n        delete this.bindings[event];\n      } else {\n        var i = 0;\n        while (i < this.bindings[event].length) {\n          if (this.bindings[event][i].handler === handler) {\n            this.bindings[event].splice(i, 1);\n          } else {\n            ++i;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'trigger',\n    value: function trigger(event) {\n      if (typeof this.bindings !== 'undefined' && this.bindings[event]) {\n        var i = 0;\n\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        while (i < this.bindings[event].length) {\n          var _bindings$event$i = this.bindings[event][i];\n          var handler = _bindings$event$i.handler;\n          var ctx = _bindings$event$i.ctx;\n          var once = _bindings$event$i.once;\n\n          var context = ctx;\n          if (typeof context === 'undefined') {\n            context = this;\n          }\n\n          handler.apply(context, args);\n\n          if (once) {\n            this.bindings[event].splice(i, 1);\n          } else {\n            ++i;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Evented;\n})();\n\nTetherBase.Utils = {\n  getActualBoundingClientRect: getActualBoundingClientRect,\n  getScrollParents: getScrollParents,\n  getBounds: getBounds,\n  getOffsetParent: getOffsetParent,\n  extend: extend,\n  addClass: addClass,\n  removeClass: removeClass,\n  hasClass: hasClass,\n  updateClasses: updateClasses,\n  defer: defer,\n  flush: flush,\n  uniqueId: uniqueId,\n  Evented: Evented,\n  getScrollBarSize: getScrollBarSize,\n  removeUtilElements: removeUtilElements\n};\n/* globals TetherBase, performance */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x6, _x7, _x8) { var _again = true; _function: while (_again) { var object = _x6, property = _x7, receiver = _x8; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x6 = parent; _x7 = property; _x8 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (typeof TetherBase === 'undefined') {\n  throw new Error('You must include the utils.js file before tether.js');\n}\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getScrollParents = _TetherBase$Utils.getScrollParents;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar getOffsetParent = _TetherBase$Utils.getOffsetParent;\nvar extend = _TetherBase$Utils.extend;\nvar addClass = _TetherBase$Utils.addClass;\nvar removeClass = _TetherBase$Utils.removeClass;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\nvar flush = _TetherBase$Utils.flush;\nvar getScrollBarSize = _TetherBase$Utils.getScrollBarSize;\nvar removeUtilElements = _TetherBase$Utils.removeUtilElements;\n\nfunction within(a, b) {\n  var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\n  return a + diff >= b && b >= a - diff;\n}\n\nvar transformKey = (function () {\n  if (typeof document === 'undefined') {\n    return '';\n  }\n  var el = document.createElement('div');\n\n  var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];\n  for (var i = 0; i < transforms.length; ++i) {\n    var key = transforms[i];\n    if (el.style[key] !== undefined) {\n      return key;\n    }\n  }\n})();\n\nvar tethers = [];\n\nvar position = function position() {\n  tethers.forEach(function (tether) {\n    tether.position(false);\n  });\n  flush();\n};\n\nfunction now() {\n  if (typeof performance === 'object' && typeof performance.now === 'function') {\n    return performance.now();\n  }\n  return +new Date();\n}\n\n(function () {\n  var lastCall = null;\n  var lastDuration = null;\n  var pendingTimeout = null;\n\n  var tick = function tick() {\n    if (typeof lastDuration !== 'undefined' && lastDuration > 16) {\n      // We voluntarily throttle ourselves if we can't manage 60fps\n      lastDuration = Math.min(lastDuration - 16, 250);\n\n      // Just in case this is the last event, remember to position just once more\n      pendingTimeout = setTimeout(tick, 250);\n      return;\n    }\n\n    if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {\n      // Some browsers call events a little too frequently, refuse to run more than is reasonable\n      return;\n    }\n\n    if (pendingTimeout != null) {\n      clearTimeout(pendingTimeout);\n      pendingTimeout = null;\n    }\n\n    lastCall = now();\n    position();\n    lastDuration = now() - lastCall;\n  };\n\n  if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {\n    ['resize', 'scroll', 'touchmove'].forEach(function (event) {\n      window.addEventListener(event, tick);\n    });\n  }\n})();\n\nvar MIRROR_LR = {\n  center: 'center',\n  left: 'right',\n  right: 'left'\n};\n\nvar MIRROR_TB = {\n  middle: 'middle',\n  top: 'bottom',\n  bottom: 'top'\n};\n\nvar OFFSET_MAP = {\n  top: 0,\n  left: 0,\n  middle: '50%',\n  center: '50%',\n  bottom: '100%',\n  right: '100%'\n};\n\nvar autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {\n  var left = attachment.left;\n  var top = attachment.top;\n\n  if (left === 'auto') {\n    left = MIRROR_LR[relativeToAttachment.left];\n  }\n\n  if (top === 'auto') {\n    top = MIRROR_TB[relativeToAttachment.top];\n  }\n\n  return { left: left, top: top };\n};\n\nvar attachmentToOffset = function attachmentToOffset(attachment) {\n  var left = attachment.left;\n  var top = attachment.top;\n\n  if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {\n    left = OFFSET_MAP[attachment.left];\n  }\n\n  if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {\n    top = OFFSET_MAP[attachment.top];\n  }\n\n  return { left: left, top: top };\n};\n\nfunction addOffset() {\n  var out = { top: 0, left: 0 };\n\n  for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {\n    offsets[_key] = arguments[_key];\n  }\n\n  offsets.forEach(function (_ref) {\n    var top = _ref.top;\n    var left = _ref.left;\n\n    if (typeof top === 'string') {\n      top = parseFloat(top, 10);\n    }\n    if (typeof left === 'string') {\n      left = parseFloat(left, 10);\n    }\n\n    out.top += top;\n    out.left += left;\n  });\n\n  return out;\n}\n\nfunction offsetToPx(offset, size) {\n  if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {\n    offset.left = parseFloat(offset.left, 10) / 100 * size.width;\n  }\n  if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {\n    offset.top = parseFloat(offset.top, 10) / 100 * size.height;\n  }\n\n  return offset;\n}\n\nvar parseOffset = function parseOffset(value) {\n  var _value$split = value.split(' ');\n\n  var _value$split2 = _slicedToArray(_value$split, 2);\n\n  var top = _value$split2[0];\n  var left = _value$split2[1];\n\n  return { top: top, left: left };\n};\nvar parseAttachment = parseOffset;\n\nvar TetherClass = (function (_Evented) {\n  _inherits(TetherClass, _Evented);\n\n  function TetherClass(options) {\n    var _this = this;\n\n    _classCallCheck(this, TetherClass);\n\n    _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);\n    this.position = this.position.bind(this);\n\n    tethers.push(this);\n\n    this.history = [];\n\n    this.setOptions(options, false);\n\n    TetherBase.modules.forEach(function (module) {\n      if (typeof module.initialize !== 'undefined') {\n        module.initialize.call(_this);\n      }\n    });\n\n    this.position();\n  }\n\n  _createClass(TetherClass, [{\n    key: 'getClass',\n    value: function getClass() {\n      var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n      var classes = this.options.classes;\n\n      if (typeof classes !== 'undefined' && classes[key]) {\n        return this.options.classes[key];\n      } else if (this.options.classPrefix) {\n        return this.options.classPrefix + '-' + key;\n      } else {\n        return key;\n      }\n    }\n  }, {\n    key: 'setOptions',\n    value: function setOptions(options) {\n      var _this2 = this;\n\n      var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n      var defaults = {\n        offset: '0 0',\n        targetOffset: '0 0',\n        targetAttachment: 'auto auto',\n        classPrefix: 'tether'\n      };\n\n      this.options = extend(defaults, options);\n\n      var _options = this.options;\n      var element = _options.element;\n      var target = _options.target;\n      var targetModifier = _options.targetModifier;\n\n      this.element = element;\n      this.target = target;\n      this.targetModifier = targetModifier;\n\n      if (this.target === 'viewport') {\n        this.target = document.body;\n        this.targetModifier = 'visible';\n      } else if (this.target === 'scroll-handle') {\n        this.target = document.body;\n        this.targetModifier = 'scroll-handle';\n      }\n\n      ['element', 'target'].forEach(function (key) {\n        if (typeof _this2[key] === 'undefined') {\n          throw new Error('Tether Error: Both element and target must be defined');\n        }\n\n        if (typeof _this2[key].jquery !== 'undefined') {\n          _this2[key] = _this2[key][0];\n        } else if (typeof _this2[key] === 'string') {\n          _this2[key] = document.querySelector(_this2[key]);\n        }\n      });\n\n      addClass(this.element, this.getClass('element'));\n      if (!(this.options.addTargetClasses === false)) {\n        addClass(this.target, this.getClass('target'));\n      }\n\n      if (!this.options.attachment) {\n        throw new Error('Tether Error: You must provide an attachment');\n      }\n\n      this.targetAttachment = parseAttachment(this.options.targetAttachment);\n      this.attachment = parseAttachment(this.options.attachment);\n      this.offset = parseOffset(this.options.offset);\n      this.targetOffset = parseOffset(this.options.targetOffset);\n\n      if (typeof this.scrollParents !== 'undefined') {\n        this.disable();\n      }\n\n      if (this.targetModifier === 'scroll-handle') {\n        this.scrollParents = [this.target];\n      } else {\n        this.scrollParents = getScrollParents(this.target);\n      }\n\n      if (!(this.options.enabled === false)) {\n        this.enable(pos);\n      }\n    }\n  }, {\n    key: 'getTargetBounds',\n    value: function getTargetBounds() {\n      if (typeof this.targetModifier !== 'undefined') {\n        if (this.targetModifier === 'visible') {\n          if (this.target === document.body) {\n            return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };\n          } else {\n            var bounds = getBounds(this.target);\n\n            var out = {\n              height: bounds.height,\n              width: bounds.width,\n              top: bounds.top,\n              left: bounds.left\n            };\n\n            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));\n            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));\n            out.height = Math.min(innerHeight, out.height);\n            out.height -= 2;\n\n            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));\n            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));\n            out.width = Math.min(innerWidth, out.width);\n            out.width -= 2;\n\n            if (out.top < pageYOffset) {\n              out.top = pageYOffset;\n            }\n            if (out.left < pageXOffset) {\n              out.left = pageXOffset;\n            }\n\n            return out;\n          }\n        } else if (this.targetModifier === 'scroll-handle') {\n          var bounds = undefined;\n          var target = this.target;\n          if (target === document.body) {\n            target = document.documentElement;\n\n            bounds = {\n              left: pageXOffset,\n              top: pageYOffset,\n              height: innerHeight,\n              width: innerWidth\n            };\n          } else {\n            bounds = getBounds(target);\n          }\n\n          var style = getComputedStyle(target);\n\n          var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;\n\n          var scrollBottom = 0;\n          if (hasBottomScroll) {\n            scrollBottom = 15;\n          }\n\n          var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;\n\n          var out = {\n            width: 15,\n            height: height * 0.975 * (height / target.scrollHeight),\n            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15\n          };\n\n          var fitAdj = 0;\n          if (height < 408 && this.target === document.body) {\n            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;\n          }\n\n          if (this.target !== document.body) {\n            out.height = Math.max(out.height, 24);\n          }\n\n          var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);\n          out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);\n\n          if (this.target === document.body) {\n            out.height = Math.max(out.height, 24);\n          }\n\n          return out;\n        }\n      } else {\n        return getBounds(this.target);\n      }\n    }\n  }, {\n    key: 'clearCache',\n    value: function clearCache() {\n      this._cache = {};\n    }\n  }, {\n    key: 'cache',\n    value: function cache(k, getter) {\n      // More than one module will often need the same DOM info, so\n      // we keep a cache which is cleared on each position call\n      if (typeof this._cache === 'undefined') {\n        this._cache = {};\n      }\n\n      if (typeof this._cache[k] === 'undefined') {\n        this._cache[k] = getter.call(this);\n      }\n\n      return this._cache[k];\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      var _this3 = this;\n\n      var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n      if (!(this.options.addTargetClasses === false)) {\n        addClass(this.target, this.getClass('enabled'));\n      }\n      addClass(this.element, this.getClass('enabled'));\n      this.enabled = true;\n\n      this.scrollParents.forEach(function (parent) {\n        if (parent !== _this3.target.ownerDocument) {\n          parent.addEventListener('scroll', _this3.position);\n        }\n      });\n\n      if (pos) {\n        this.position();\n      }\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      var _this4 = this;\n\n      removeClass(this.target, this.getClass('enabled'));\n      removeClass(this.element, this.getClass('enabled'));\n      this.enabled = false;\n\n      if (typeof this.scrollParents !== 'undefined') {\n        this.scrollParents.forEach(function (parent) {\n          parent.removeEventListener('scroll', _this4.position);\n        });\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this5 = this;\n\n      this.disable();\n\n      tethers.forEach(function (tether, i) {\n        if (tether === _this5) {\n          tethers.splice(i, 1);\n        }\n      });\n\n      // Remove any elements we were using for convenience from the DOM\n      if (tethers.length === 0) {\n        removeUtilElements();\n      }\n    }\n  }, {\n    key: 'updateAttachClasses',\n    value: function updateAttachClasses(elementAttach, targetAttach) {\n      var _this6 = this;\n\n      elementAttach = elementAttach || this.attachment;\n      targetAttach = targetAttach || this.targetAttachment;\n      var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];\n\n      if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {\n        // updateAttachClasses can be called more than once in a position call, so\n        // we need to clean up after ourselves such that when the last defer gets\n        // ran it doesn't add any extra classes from previous calls.\n        this._addAttachClasses.splice(0, this._addAttachClasses.length);\n      }\n\n      if (typeof this._addAttachClasses === 'undefined') {\n        this._addAttachClasses = [];\n      }\n      var add = this._addAttachClasses;\n\n      if (elementAttach.top) {\n        add.push(this.getClass('element-attached') + '-' + elementAttach.top);\n      }\n      if (elementAttach.left) {\n        add.push(this.getClass('element-attached') + '-' + elementAttach.left);\n      }\n      if (targetAttach.top) {\n        add.push(this.getClass('target-attached') + '-' + targetAttach.top);\n      }\n      if (targetAttach.left) {\n        add.push(this.getClass('target-attached') + '-' + targetAttach.left);\n      }\n\n      var all = [];\n      sides.forEach(function (side) {\n        all.push(_this6.getClass('element-attached') + '-' + side);\n        all.push(_this6.getClass('target-attached') + '-' + side);\n      });\n\n      defer(function () {\n        if (!(typeof _this6._addAttachClasses !== 'undefined')) {\n          return;\n        }\n\n        updateClasses(_this6.element, _this6._addAttachClasses, all);\n        if (!(_this6.options.addTargetClasses === false)) {\n          updateClasses(_this6.target, _this6._addAttachClasses, all);\n        }\n\n        delete _this6._addAttachClasses;\n      });\n    }\n  }, {\n    key: 'position',\n    value: function position() {\n      var _this7 = this;\n\n      var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n      // flushChanges commits the changes immediately, leave true unless you are positioning multiple\n      // tethers (in which case call Tether.Utils.flush yourself when you're done)\n\n      if (!this.enabled) {\n        return;\n      }\n\n      this.clearCache();\n\n      // Turn 'auto' attachments into the appropriate corner or edge\n      var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);\n\n      this.updateAttachClasses(this.attachment, targetAttachment);\n\n      var elementPos = this.cache('element-bounds', function () {\n        return getBounds(_this7.element);\n      });\n\n      var width = elementPos.width;\n      var height = elementPos.height;\n\n      if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n        var _lastSize = this.lastSize;\n\n        // We cache the height and width to make it possible to position elements that are\n        // getting hidden.\n        width = _lastSize.width;\n        height = _lastSize.height;\n      } else {\n        this.lastSize = { width: width, height: height };\n      }\n\n      var targetPos = this.cache('target-bounds', function () {\n        return _this7.getTargetBounds();\n      });\n      var targetSize = targetPos;\n\n      // Get an actual px offset from the attachment\n      var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });\n      var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);\n\n      var manualOffset = offsetToPx(this.offset, { width: width, height: height });\n      var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);\n\n      // Add the manually provided offset\n      offset = addOffset(offset, manualOffset);\n      targetOffset = addOffset(targetOffset, manualTargetOffset);\n\n      // It's now our goal to make (element position + offset) == (target position + target offset)\n      var left = targetPos.left + targetOffset.left - offset.left;\n      var top = targetPos.top + targetOffset.top - offset.top;\n\n      for (var i = 0; i < TetherBase.modules.length; ++i) {\n        var _module2 = TetherBase.modules[i];\n        var ret = _module2.position.call(this, {\n          left: left,\n          top: top,\n          targetAttachment: targetAttachment,\n          targetPos: targetPos,\n          elementPos: elementPos,\n          offset: offset,\n          targetOffset: targetOffset,\n          manualOffset: manualOffset,\n          manualTargetOffset: manualTargetOffset,\n          scrollbarSize: scrollbarSize,\n          attachment: this.attachment\n        });\n\n        if (ret === false) {\n          return false;\n        } else if (typeof ret === 'undefined' || typeof ret !== 'object') {\n          continue;\n        } else {\n          top = ret.top;\n          left = ret.left;\n        }\n      }\n\n      // We describe the position three different ways to give the optimizer\n      // a chance to decide the best possible way to position the element\n      // with the fewest repaints.\n      var next = {\n        // It's position relative to the page (absolute positioning when\n        // the element is a child of the body)\n        page: {\n          top: top,\n          left: left\n        },\n\n        // It's position relative to the viewport (fixed positioning)\n        viewport: {\n          top: top - pageYOffset,\n          bottom: pageYOffset - top - height + innerHeight,\n          left: left - pageXOffset,\n          right: pageXOffset - left - width + innerWidth\n        }\n      };\n\n      var doc = this.target.ownerDocument;\n      var win = doc.defaultView;\n\n      var scrollbarSize = undefined;\n      if (win.innerHeight > doc.documentElement.clientHeight) {\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n        next.viewport.bottom -= scrollbarSize.height;\n      }\n\n      if (win.innerWidth > doc.documentElement.clientWidth) {\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n        next.viewport.right -= scrollbarSize.width;\n      }\n\n      if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {\n        // Absolute positioning in the body will be relative to the page, not the 'initial containing block'\n        next.page.bottom = doc.body.scrollHeight - top - height;\n        next.page.right = doc.body.scrollWidth - left - width;\n      }\n\n      if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {\n        (function () {\n          var offsetParent = _this7.cache('target-offsetparent', function () {\n            return getOffsetParent(_this7.target);\n          });\n          var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {\n            return getBounds(offsetParent);\n          });\n          var offsetParentStyle = getComputedStyle(offsetParent);\n          var offsetParentSize = offsetPosition;\n\n          var offsetBorder = {};\n          ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {\n            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);\n          });\n\n          offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;\n          offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;\n\n          if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {\n            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {\n              // We're within the visible part of the target's scroll parent\n              var scrollTop = offsetParent.scrollTop;\n              var scrollLeft = offsetParent.scrollLeft;\n\n              // It's position relative to the target's offset parent (absolute positioning when\n              // the element is moved to be a child of the target's offset parent).\n              next.offset = {\n                top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,\n                left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left\n              };\n            }\n          }\n        })();\n      }\n\n      // We could also travel up the DOM and try each containing context, rather than only\n      // looking at the body, but we're gonna get diminishing returns.\n\n      this.move(next);\n\n      this.history.unshift(next);\n\n      if (this.history.length > 3) {\n        this.history.pop();\n      }\n\n      if (flushChanges) {\n        flush();\n      }\n\n      return true;\n    }\n\n    // THE ISSUE\n  }, {\n    key: 'move',\n    value: function move(pos) {\n      var _this8 = this;\n\n      if (!(typeof this.element.parentNode !== 'undefined')) {\n        return;\n      }\n\n      var same = {};\n\n      for (var type in pos) {\n        same[type] = {};\n\n        for (var key in pos[type]) {\n          var found = false;\n\n          for (var i = 0; i < this.history.length; ++i) {\n            var point = this.history[i];\n            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            same[type][key] = true;\n          }\n        }\n      }\n\n      var css = { top: '', left: '', right: '', bottom: '' };\n\n      var transcribe = function transcribe(_same, _pos) {\n        var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';\n        var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;\n        if (gpu !== false) {\n          var yPos = undefined,\n              xPos = undefined;\n          if (_same.top) {\n            css.top = 0;\n            yPos = _pos.top;\n          } else {\n            css.bottom = 0;\n            yPos = -_pos.bottom;\n          }\n\n          if (_same.left) {\n            css.left = 0;\n            xPos = _pos.left;\n          } else {\n            css.right = 0;\n            xPos = -_pos.right;\n          }\n\n          if (window.matchMedia) {\n            // HubSpot/tether#207\n            var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;\n            if (!retina) {\n              xPos = Math.round(xPos);\n              yPos = Math.round(yPos);\n            }\n          }\n\n          css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';\n\n          if (transformKey !== 'msTransform') {\n            // The Z transform will keep this in the GPU (faster, and prevents artifacts),\n            // but IE9 doesn't support 3d transforms and will choke.\n            css[transformKey] += \" translateZ(0)\";\n          }\n        } else {\n          if (_same.top) {\n            css.top = _pos.top + 'px';\n          } else {\n            css.bottom = _pos.bottom + 'px';\n          }\n\n          if (_same.left) {\n            css.left = _pos.left + 'px';\n          } else {\n            css.right = _pos.right + 'px';\n          }\n        }\n      };\n\n      var moved = false;\n      if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {\n        css.position = 'absolute';\n        transcribe(same.page, pos.page);\n      } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {\n        css.position = 'fixed';\n        transcribe(same.viewport, pos.viewport);\n      } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {\n        (function () {\n          css.position = 'absolute';\n          var offsetParent = _this8.cache('target-offsetparent', function () {\n            return getOffsetParent(_this8.target);\n          });\n\n          if (getOffsetParent(_this8.element) !== offsetParent) {\n            defer(function () {\n              _this8.element.parentNode.removeChild(_this8.element);\n              offsetParent.appendChild(_this8.element);\n            });\n          }\n\n          transcribe(same.offset, pos.offset);\n          moved = true;\n        })();\n      } else {\n        css.position = 'absolute';\n        transcribe({ top: true, left: true }, pos.page);\n      }\n\n      if (!moved) {\n        if (this.options.bodyElement) {\n          if (this.element.parentNode !== this.options.bodyElement) {\n            this.options.bodyElement.appendChild(this.element);\n          }\n        } else {\n          var offsetParentIsBody = true;\n          var currentNode = this.element.parentNode;\n          while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {\n            if (getComputedStyle(currentNode).position !== 'static') {\n              offsetParentIsBody = false;\n              break;\n            }\n\n            currentNode = currentNode.parentNode;\n          }\n\n          if (!offsetParentIsBody) {\n            this.element.parentNode.removeChild(this.element);\n            this.element.ownerDocument.body.appendChild(this.element);\n          }\n        }\n      }\n\n      // Any css change will trigger a repaint, so let's avoid one if nothing changed\n      var writeCSS = {};\n      var write = false;\n      for (var key in css) {\n        var val = css[key];\n        var elVal = this.element.style[key];\n\n        if (elVal !== val) {\n          write = true;\n          writeCSS[key] = val;\n        }\n      }\n\n      if (write) {\n        defer(function () {\n          extend(_this8.element.style, writeCSS);\n          _this8.trigger('repositioned');\n        });\n      }\n    }\n  }]);\n\n  return TetherClass;\n})(Evented);\n\nTetherClass.modules = [];\n\nTetherBase.position = position;\n\nvar Tether = extend(TetherClass, TetherBase);\n/* globals TetherBase */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar extend = _TetherBase$Utils.extend;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\n\nvar BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];\n\nfunction getBoundingRect(tether, to) {\n  if (to === 'scrollParent') {\n    to = tether.scrollParents[0];\n  } else if (to === 'window') {\n    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];\n  }\n\n  if (to === document) {\n    to = to.documentElement;\n  }\n\n  if (typeof to.nodeType !== 'undefined') {\n    (function () {\n      var node = to;\n      var size = getBounds(to);\n      var pos = size;\n      var style = getComputedStyle(to);\n\n      to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];\n\n      // Account any parent Frames scroll offset\n      if (node.ownerDocument !== document) {\n        var win = node.ownerDocument.defaultView;\n        to[0] += win.pageXOffset;\n        to[1] += win.pageYOffset;\n        to[2] += win.pageXOffset;\n        to[3] += win.pageYOffset;\n      }\n\n      BOUNDS_FORMAT.forEach(function (side, i) {\n        side = side[0].toUpperCase() + side.substr(1);\n        if (side === 'Top' || side === 'Left') {\n          to[i] += parseFloat(style['border' + side + 'Width']);\n        } else {\n          to[i] -= parseFloat(style['border' + side + 'Width']);\n        }\n      });\n    })();\n  }\n\n  return to;\n}\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var _this = this;\n\n    var top = _ref.top;\n    var left = _ref.left;\n    var targetAttachment = _ref.targetAttachment;\n\n    if (!this.options.constraints) {\n      return true;\n    }\n\n    var _cache = this.cache('element-bounds', function () {\n      return getBounds(_this.element);\n    });\n\n    var height = _cache.height;\n    var width = _cache.width;\n\n    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n      var _lastSize = this.lastSize;\n\n      // Handle the item getting hidden as a result of our positioning without glitching\n      // the classes in and out\n      width = _lastSize.width;\n      height = _lastSize.height;\n    }\n\n    var targetSize = this.cache('target-bounds', function () {\n      return _this.getTargetBounds();\n    });\n\n    var targetHeight = targetSize.height;\n    var targetWidth = targetSize.width;\n\n    var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];\n\n    this.options.constraints.forEach(function (constraint) {\n      var outOfBoundsClass = constraint.outOfBoundsClass;\n      var pinnedClass = constraint.pinnedClass;\n\n      if (outOfBoundsClass) {\n        allClasses.push(outOfBoundsClass);\n      }\n      if (pinnedClass) {\n        allClasses.push(pinnedClass);\n      }\n    });\n\n    allClasses.forEach(function (cls) {\n      ['left', 'top', 'right', 'bottom'].forEach(function (side) {\n        allClasses.push(cls + '-' + side);\n      });\n    });\n\n    var addClasses = [];\n\n    var tAttachment = extend({}, targetAttachment);\n    var eAttachment = extend({}, this.attachment);\n\n    this.options.constraints.forEach(function (constraint) {\n      var to = constraint.to;\n      var attachment = constraint.attachment;\n      var pin = constraint.pin;\n\n      if (typeof attachment === 'undefined') {\n        attachment = '';\n      }\n\n      var changeAttachX = undefined,\n          changeAttachY = undefined;\n      if (attachment.indexOf(' ') >= 0) {\n        var _attachment$split = attachment.split(' ');\n\n        var _attachment$split2 = _slicedToArray(_attachment$split, 2);\n\n        changeAttachY = _attachment$split2[0];\n        changeAttachX = _attachment$split2[1];\n      } else {\n        changeAttachX = changeAttachY = attachment;\n      }\n\n      var bounds = getBoundingRect(_this, to);\n\n      if (changeAttachY === 'target' || changeAttachY === 'both') {\n        if (top < bounds[1] && tAttachment.top === 'top') {\n          top += targetHeight;\n          tAttachment.top = 'bottom';\n        }\n\n        if (top + height > bounds[3] && tAttachment.top === 'bottom') {\n          top -= targetHeight;\n          tAttachment.top = 'top';\n        }\n      }\n\n      if (changeAttachY === 'together') {\n        if (tAttachment.top === 'top') {\n          if (eAttachment.top === 'bottom' && top < bounds[1]) {\n            top += targetHeight;\n            tAttachment.top = 'bottom';\n\n            top += height;\n            eAttachment.top = 'top';\n          } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {\n            top -= height - targetHeight;\n            tAttachment.top = 'bottom';\n\n            eAttachment.top = 'bottom';\n          }\n        }\n\n        if (tAttachment.top === 'bottom') {\n          if (eAttachment.top === 'top' && top + height > bounds[3]) {\n            top -= targetHeight;\n            tAttachment.top = 'top';\n\n            top -= height;\n            eAttachment.top = 'bottom';\n          } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {\n            top += height - targetHeight;\n            tAttachment.top = 'top';\n\n            eAttachment.top = 'top';\n          }\n        }\n\n        if (tAttachment.top === 'middle') {\n          if (top + height > bounds[3] && eAttachment.top === 'top') {\n            top -= height;\n            eAttachment.top = 'bottom';\n          } else if (top < bounds[1] && eAttachment.top === 'bottom') {\n            top += height;\n            eAttachment.top = 'top';\n          }\n        }\n      }\n\n      if (changeAttachX === 'target' || changeAttachX === 'both') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          left += targetWidth;\n          tAttachment.left = 'right';\n        }\n\n        if (left + width > bounds[2] && tAttachment.left === 'right') {\n          left -= targetWidth;\n          tAttachment.left = 'left';\n        }\n      }\n\n      if (changeAttachX === 'together') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          if (eAttachment.left === 'right') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left += width;\n            eAttachment.left = 'left';\n          } else if (eAttachment.left === 'left') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left -= width;\n            eAttachment.left = 'right';\n          }\n        } else if (left + width > bounds[2] && tAttachment.left === 'right') {\n          if (eAttachment.left === 'left') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (eAttachment.left === 'right') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left += width;\n            eAttachment.left = 'left';\n          }\n        } else if (tAttachment.left === 'center') {\n          if (left + width > bounds[2] && eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (left < bounds[0] && eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          }\n        }\n      }\n\n      if (changeAttachY === 'element' || changeAttachY === 'both') {\n        if (top < bounds[1] && eAttachment.top === 'bottom') {\n          top += height;\n          eAttachment.top = 'top';\n        }\n\n        if (top + height > bounds[3] && eAttachment.top === 'top') {\n          top -= height;\n          eAttachment.top = 'bottom';\n        }\n      }\n\n      if (changeAttachX === 'element' || changeAttachX === 'both') {\n        if (left < bounds[0]) {\n          if (eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          } else if (eAttachment.left === 'center') {\n            left += width / 2;\n            eAttachment.left = 'left';\n          }\n        }\n\n        if (left + width > bounds[2]) {\n          if (eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (eAttachment.left === 'center') {\n            left -= width / 2;\n            eAttachment.left = 'right';\n          }\n        }\n      }\n\n      if (typeof pin === 'string') {\n        pin = pin.split(',').map(function (p) {\n          return p.trim();\n        });\n      } else if (pin === true) {\n        pin = ['top', 'left', 'right', 'bottom'];\n      }\n\n      pin = pin || [];\n\n      var pinned = [];\n      var oob = [];\n\n      if (top < bounds[1]) {\n        if (pin.indexOf('top') >= 0) {\n          top = bounds[1];\n          pinned.push('top');\n        } else {\n          oob.push('top');\n        }\n      }\n\n      if (top + height > bounds[3]) {\n        if (pin.indexOf('bottom') >= 0) {\n          top = bounds[3] - height;\n          pinned.push('bottom');\n        } else {\n          oob.push('bottom');\n        }\n      }\n\n      if (left < bounds[0]) {\n        if (pin.indexOf('left') >= 0) {\n          left = bounds[0];\n          pinned.push('left');\n        } else {\n          oob.push('left');\n        }\n      }\n\n      if (left + width > bounds[2]) {\n        if (pin.indexOf('right') >= 0) {\n          left = bounds[2] - width;\n          pinned.push('right');\n        } else {\n          oob.push('right');\n        }\n      }\n\n      if (pinned.length) {\n        (function () {\n          var pinnedClass = undefined;\n          if (typeof _this.options.pinnedClass !== 'undefined') {\n            pinnedClass = _this.options.pinnedClass;\n          } else {\n            pinnedClass = _this.getClass('pinned');\n          }\n\n          addClasses.push(pinnedClass);\n          pinned.forEach(function (side) {\n            addClasses.push(pinnedClass + '-' + side);\n          });\n        })();\n      }\n\n      if (oob.length) {\n        (function () {\n          var oobClass = undefined;\n          if (typeof _this.options.outOfBoundsClass !== 'undefined') {\n            oobClass = _this.options.outOfBoundsClass;\n          } else {\n            oobClass = _this.getClass('out-of-bounds');\n          }\n\n          addClasses.push(oobClass);\n          oob.forEach(function (side) {\n            addClasses.push(oobClass + '-' + side);\n          });\n        })();\n      }\n\n      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {\n        eAttachment.left = tAttachment.left = false;\n      }\n      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {\n        eAttachment.top = tAttachment.top = false;\n      }\n\n      if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {\n        _this.updateAttachClasses(eAttachment, tAttachment);\n        _this.trigger('update', {\n          attachment: eAttachment,\n          targetAttachment: tAttachment\n        });\n      }\n    });\n\n    defer(function () {\n      if (!(_this.options.addTargetClasses === false)) {\n        updateClasses(_this.target, addClasses, allClasses);\n      }\n      updateClasses(_this.element, addClasses, allClasses);\n    });\n\n    return { top: top, left: left };\n  }\n});\n/* globals TetherBase */\n\n'use strict';\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var _this = this;\n\n    var top = _ref.top;\n    var left = _ref.left;\n\n    var _cache = this.cache('element-bounds', function () {\n      return getBounds(_this.element);\n    });\n\n    var height = _cache.height;\n    var width = _cache.width;\n\n    var targetPos = this.getTargetBounds();\n\n    var bottom = top + height;\n    var right = left + width;\n\n    var abutted = [];\n    if (top <= targetPos.bottom && bottom >= targetPos.top) {\n      ['left', 'right'].forEach(function (side) {\n        var targetPosSide = targetPos[side];\n        if (targetPosSide === left || targetPosSide === right) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    if (left <= targetPos.right && right >= targetPos.left) {\n      ['top', 'bottom'].forEach(function (side) {\n        var targetPosSide = targetPos[side];\n        if (targetPosSide === top || targetPosSide === bottom) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    var allClasses = [];\n    var addClasses = [];\n\n    var sides = ['left', 'top', 'right', 'bottom'];\n    allClasses.push(this.getClass('abutted'));\n    sides.forEach(function (side) {\n      allClasses.push(_this.getClass('abutted') + '-' + side);\n    });\n\n    if (abutted.length) {\n      addClasses.push(this.getClass('abutted'));\n    }\n\n    abutted.forEach(function (side) {\n      addClasses.push(_this.getClass('abutted') + '-' + side);\n    });\n\n    defer(function () {\n      if (!(_this.options.addTargetClasses === false)) {\n        updateClasses(_this.target, addClasses, allClasses);\n      }\n      updateClasses(_this.element, addClasses, allClasses);\n    });\n\n    return true;\n  }\n});\n/* globals TetherBase */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var top = _ref.top;\n    var left = _ref.left;\n\n    if (!this.options.shift) {\n      return;\n    }\n\n    var shift = this.options.shift;\n    if (typeof this.options.shift === 'function') {\n      shift = this.options.shift.call(this, { top: top, left: left });\n    }\n\n    var shiftTop = undefined,\n        shiftLeft = undefined;\n    if (typeof shift === 'string') {\n      shift = shift.split(' ');\n      shift[1] = shift[1] || shift[0];\n\n      var _shift = shift;\n\n      var _shift2 = _slicedToArray(_shift, 2);\n\n      shiftTop = _shift2[0];\n      shiftLeft = _shift2[1];\n\n      shiftTop = parseFloat(shiftTop, 10);\n      shiftLeft = parseFloat(shiftLeft, 10);\n    } else {\n      shiftTop = shift.top;\n      shiftLeft = shift.left;\n    }\n\n    top += shiftTop;\n    left += shiftLeft;\n\n    return { top: top, left: left };\n  }\n});\nreturn Tether;\n\n}));\n\n\n/***/ })\n\n},[\"6BCL\"]);\n\n\n// WEBPACK FOOTER //\n// tether/8e0b277d0f94c7c6d67d.bundle.js","/*! tether 1.4.3 */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require, exports, module);\n  } else {\n    root.Tether = factory();\n  }\n}(this, function(require, exports, module) {\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar TetherBase = undefined;\nif (typeof TetherBase === 'undefined') {\n  TetherBase = { modules: [] };\n}\n\nvar zeroElement = null;\n\n// Same as native getBoundingClientRect, except it takes into account parent <frame> offsets\n// if the element lies within a nested document (<frame> or <iframe>-like).\nfunction getActualBoundingClientRect(node) {\n  var boundingRect = node.getBoundingClientRect();\n\n  // The original object returned by getBoundingClientRect is immutable, so we clone it\n  // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9\n  var rect = {};\n  for (var k in boundingRect) {\n    rect[k] = boundingRect[k];\n  }\n\n  if (node.ownerDocument !== document) {\n    var _frameElement = node.ownerDocument.defaultView.frameElement;\n    if (_frameElement) {\n      var frameRect = getActualBoundingClientRect(_frameElement);\n      rect.top += frameRect.top;\n      rect.bottom += frameRect.top;\n      rect.left += frameRect.left;\n      rect.right += frameRect.left;\n    }\n  }\n\n  return rect;\n}\n\nfunction getScrollParents(el) {\n  // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  var computedStyle = getComputedStyle(el) || {};\n  var position = computedStyle.position;\n  var parents = [];\n\n  if (position === 'fixed') {\n    return [el];\n  }\n\n  var parent = el;\n  while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {\n    var style = undefined;\n    try {\n      style = getComputedStyle(parent);\n    } catch (err) {}\n\n    if (typeof style === 'undefined' || style === null) {\n      parents.push(parent);\n      return parents;\n    }\n\n    var _style = style;\n    var overflow = _style.overflow;\n    var overflowX = _style.overflowX;\n    var overflowY = _style.overflowY;\n\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n      if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {\n        parents.push(parent);\n      }\n    }\n  }\n\n  parents.push(el.ownerDocument.body);\n\n  // If the node is within a frame, account for the parent window scroll\n  if (el.ownerDocument !== document) {\n    parents.push(el.ownerDocument.defaultView);\n  }\n\n  return parents;\n}\n\nvar uniqueId = (function () {\n  var id = 0;\n  return function () {\n    return ++id;\n  };\n})();\n\nvar zeroPosCache = {};\nvar getOrigin = function getOrigin() {\n  // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of\n  // jitter as the user scrolls that messes with our ability to detect if two positions\n  // are equivilant or not.  We place an element at the top left of the page that will\n  // get the same jitter, so we can cancel the two out.\n  var node = zeroElement;\n  if (!node || !document.body.contains(node)) {\n    node = document.createElement('div');\n    node.setAttribute('data-tether-id', uniqueId());\n    extend(node.style, {\n      top: 0,\n      left: 0,\n      position: 'absolute'\n    });\n\n    document.body.appendChild(node);\n\n    zeroElement = node;\n  }\n\n  var id = node.getAttribute('data-tether-id');\n  if (typeof zeroPosCache[id] === 'undefined') {\n    zeroPosCache[id] = getActualBoundingClientRect(node);\n\n    // Clear the cache when this position call is done\n    defer(function () {\n      delete zeroPosCache[id];\n    });\n  }\n\n  return zeroPosCache[id];\n};\n\nfunction removeUtilElements() {\n  if (zeroElement) {\n    document.body.removeChild(zeroElement);\n  }\n  zeroElement = null;\n};\n\nfunction getBounds(el) {\n  var doc = undefined;\n  if (el === document) {\n    doc = document;\n    el = document.documentElement;\n  } else {\n    doc = el.ownerDocument;\n  }\n\n  var docEl = doc.documentElement;\n\n  var box = getActualBoundingClientRect(el);\n\n  var origin = getOrigin();\n\n  box.top -= origin.top;\n  box.left -= origin.left;\n\n  if (typeof box.width === 'undefined') {\n    box.width = document.body.scrollWidth - box.left - box.right;\n  }\n  if (typeof box.height === 'undefined') {\n    box.height = document.body.scrollHeight - box.top - box.bottom;\n  }\n\n  box.top = box.top - docEl.clientTop;\n  box.left = box.left - docEl.clientLeft;\n  box.right = doc.body.clientWidth - box.width - box.left;\n  box.bottom = doc.body.clientHeight - box.height - box.top;\n\n  return box;\n}\n\nfunction getOffsetParent(el) {\n  return el.offsetParent || document.documentElement;\n}\n\nvar _scrollBarSize = null;\nfunction getScrollBarSize() {\n  if (_scrollBarSize) {\n    return _scrollBarSize;\n  }\n  var inner = document.createElement('div');\n  inner.style.width = '100%';\n  inner.style.height = '200px';\n\n  var outer = document.createElement('div');\n  extend(outer.style, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    pointerEvents: 'none',\n    visibility: 'hidden',\n    width: '200px',\n    height: '150px',\n    overflow: 'hidden'\n  });\n\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  var widthContained = inner.offsetWidth;\n  outer.style.overflow = 'scroll';\n  var widthScroll = inner.offsetWidth;\n\n  if (widthContained === widthScroll) {\n    widthScroll = outer.clientWidth;\n  }\n\n  document.body.removeChild(outer);\n\n  var width = widthContained - widthScroll;\n\n  _scrollBarSize = { width: width, height: width };\n  return _scrollBarSize;\n}\n\nfunction extend() {\n  var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var args = [];\n\n  Array.prototype.push.apply(args, arguments);\n\n  args.slice(1).forEach(function (obj) {\n    if (obj) {\n      for (var key in obj) {\n        if (({}).hasOwnProperty.call(obj, key)) {\n          out[key] = obj[key];\n        }\n      }\n    }\n  });\n\n  return out;\n}\n\nfunction removeClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    name.split(' ').forEach(function (cls) {\n      if (cls.trim()) {\n        el.classList.remove(cls);\n      }\n    });\n  } else {\n    var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');\n    var className = getClassName(el).replace(regex, ' ');\n    setClassName(el, className);\n  }\n}\n\nfunction addClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    name.split(' ').forEach(function (cls) {\n      if (cls.trim()) {\n        el.classList.add(cls);\n      }\n    });\n  } else {\n    removeClass(el, name);\n    var cls = getClassName(el) + (' ' + name);\n    setClassName(el, cls);\n  }\n}\n\nfunction hasClass(el, name) {\n  if (typeof el.classList !== 'undefined') {\n    return el.classList.contains(name);\n  }\n  var className = getClassName(el);\n  return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);\n}\n\nfunction getClassName(el) {\n  // Can't use just SVGAnimatedString here since nodes within a Frame in IE have\n  // completely separately SVGAnimatedString base classes\n  if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {\n    return el.className.baseVal;\n  }\n  return el.className;\n}\n\nfunction setClassName(el, className) {\n  el.setAttribute('class', className);\n}\n\nfunction updateClasses(el, add, all) {\n  // Of the set of 'all' classes, we need the 'add' classes, and only the\n  // 'add' classes to be set.\n  all.forEach(function (cls) {\n    if (add.indexOf(cls) === -1 && hasClass(el, cls)) {\n      removeClass(el, cls);\n    }\n  });\n\n  add.forEach(function (cls) {\n    if (!hasClass(el, cls)) {\n      addClass(el, cls);\n    }\n  });\n}\n\nvar deferred = [];\n\nvar defer = function defer(fn) {\n  deferred.push(fn);\n};\n\nvar flush = function flush() {\n  var fn = undefined;\n  while (fn = deferred.pop()) {\n    fn();\n  }\n};\n\nvar Evented = (function () {\n  function Evented() {\n    _classCallCheck(this, Evented);\n  }\n\n  _createClass(Evented, [{\n    key: 'on',\n    value: function on(event, handler, ctx) {\n      var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n      if (typeof this.bindings === 'undefined') {\n        this.bindings = {};\n      }\n      if (typeof this.bindings[event] === 'undefined') {\n        this.bindings[event] = [];\n      }\n      this.bindings[event].push({ handler: handler, ctx: ctx, once: once });\n    }\n  }, {\n    key: 'once',\n    value: function once(event, handler, ctx) {\n      this.on(event, handler, ctx, true);\n    }\n  }, {\n    key: 'off',\n    value: function off(event, handler) {\n      if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {\n        return;\n      }\n\n      if (typeof handler === 'undefined') {\n        delete this.bindings[event];\n      } else {\n        var i = 0;\n        while (i < this.bindings[event].length) {\n          if (this.bindings[event][i].handler === handler) {\n            this.bindings[event].splice(i, 1);\n          } else {\n            ++i;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'trigger',\n    value: function trigger(event) {\n      if (typeof this.bindings !== 'undefined' && this.bindings[event]) {\n        var i = 0;\n\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        while (i < this.bindings[event].length) {\n          var _bindings$event$i = this.bindings[event][i];\n          var handler = _bindings$event$i.handler;\n          var ctx = _bindings$event$i.ctx;\n          var once = _bindings$event$i.once;\n\n          var context = ctx;\n          if (typeof context === 'undefined') {\n            context = this;\n          }\n\n          handler.apply(context, args);\n\n          if (once) {\n            this.bindings[event].splice(i, 1);\n          } else {\n            ++i;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Evented;\n})();\n\nTetherBase.Utils = {\n  getActualBoundingClientRect: getActualBoundingClientRect,\n  getScrollParents: getScrollParents,\n  getBounds: getBounds,\n  getOffsetParent: getOffsetParent,\n  extend: extend,\n  addClass: addClass,\n  removeClass: removeClass,\n  hasClass: hasClass,\n  updateClasses: updateClasses,\n  defer: defer,\n  flush: flush,\n  uniqueId: uniqueId,\n  Evented: Evented,\n  getScrollBarSize: getScrollBarSize,\n  removeUtilElements: removeUtilElements\n};\n/* globals TetherBase, performance */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x6, _x7, _x8) { var _again = true; _function: while (_again) { var object = _x6, property = _x7, receiver = _x8; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x6 = parent; _x7 = property; _x8 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nif (typeof TetherBase === 'undefined') {\n  throw new Error('You must include the utils.js file before tether.js');\n}\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getScrollParents = _TetherBase$Utils.getScrollParents;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar getOffsetParent = _TetherBase$Utils.getOffsetParent;\nvar extend = _TetherBase$Utils.extend;\nvar addClass = _TetherBase$Utils.addClass;\nvar removeClass = _TetherBase$Utils.removeClass;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\nvar flush = _TetherBase$Utils.flush;\nvar getScrollBarSize = _TetherBase$Utils.getScrollBarSize;\nvar removeUtilElements = _TetherBase$Utils.removeUtilElements;\n\nfunction within(a, b) {\n  var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\n  return a + diff >= b && b >= a - diff;\n}\n\nvar transformKey = (function () {\n  if (typeof document === 'undefined') {\n    return '';\n  }\n  var el = document.createElement('div');\n\n  var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];\n  for (var i = 0; i < transforms.length; ++i) {\n    var key = transforms[i];\n    if (el.style[key] !== undefined) {\n      return key;\n    }\n  }\n})();\n\nvar tethers = [];\n\nvar position = function position() {\n  tethers.forEach(function (tether) {\n    tether.position(false);\n  });\n  flush();\n};\n\nfunction now() {\n  if (typeof performance === 'object' && typeof performance.now === 'function') {\n    return performance.now();\n  }\n  return +new Date();\n}\n\n(function () {\n  var lastCall = null;\n  var lastDuration = null;\n  var pendingTimeout = null;\n\n  var tick = function tick() {\n    if (typeof lastDuration !== 'undefined' && lastDuration > 16) {\n      // We voluntarily throttle ourselves if we can't manage 60fps\n      lastDuration = Math.min(lastDuration - 16, 250);\n\n      // Just in case this is the last event, remember to position just once more\n      pendingTimeout = setTimeout(tick, 250);\n      return;\n    }\n\n    if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {\n      // Some browsers call events a little too frequently, refuse to run more than is reasonable\n      return;\n    }\n\n    if (pendingTimeout != null) {\n      clearTimeout(pendingTimeout);\n      pendingTimeout = null;\n    }\n\n    lastCall = now();\n    position();\n    lastDuration = now() - lastCall;\n  };\n\n  if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {\n    ['resize', 'scroll', 'touchmove'].forEach(function (event) {\n      window.addEventListener(event, tick);\n    });\n  }\n})();\n\nvar MIRROR_LR = {\n  center: 'center',\n  left: 'right',\n  right: 'left'\n};\n\nvar MIRROR_TB = {\n  middle: 'middle',\n  top: 'bottom',\n  bottom: 'top'\n};\n\nvar OFFSET_MAP = {\n  top: 0,\n  left: 0,\n  middle: '50%',\n  center: '50%',\n  bottom: '100%',\n  right: '100%'\n};\n\nvar autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {\n  var left = attachment.left;\n  var top = attachment.top;\n\n  if (left === 'auto') {\n    left = MIRROR_LR[relativeToAttachment.left];\n  }\n\n  if (top === 'auto') {\n    top = MIRROR_TB[relativeToAttachment.top];\n  }\n\n  return { left: left, top: top };\n};\n\nvar attachmentToOffset = function attachmentToOffset(attachment) {\n  var left = attachment.left;\n  var top = attachment.top;\n\n  if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {\n    left = OFFSET_MAP[attachment.left];\n  }\n\n  if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {\n    top = OFFSET_MAP[attachment.top];\n  }\n\n  return { left: left, top: top };\n};\n\nfunction addOffset() {\n  var out = { top: 0, left: 0 };\n\n  for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {\n    offsets[_key] = arguments[_key];\n  }\n\n  offsets.forEach(function (_ref) {\n    var top = _ref.top;\n    var left = _ref.left;\n\n    if (typeof top === 'string') {\n      top = parseFloat(top, 10);\n    }\n    if (typeof left === 'string') {\n      left = parseFloat(left, 10);\n    }\n\n    out.top += top;\n    out.left += left;\n  });\n\n  return out;\n}\n\nfunction offsetToPx(offset, size) {\n  if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {\n    offset.left = parseFloat(offset.left, 10) / 100 * size.width;\n  }\n  if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {\n    offset.top = parseFloat(offset.top, 10) / 100 * size.height;\n  }\n\n  return offset;\n}\n\nvar parseOffset = function parseOffset(value) {\n  var _value$split = value.split(' ');\n\n  var _value$split2 = _slicedToArray(_value$split, 2);\n\n  var top = _value$split2[0];\n  var left = _value$split2[1];\n\n  return { top: top, left: left };\n};\nvar parseAttachment = parseOffset;\n\nvar TetherClass = (function (_Evented) {\n  _inherits(TetherClass, _Evented);\n\n  function TetherClass(options) {\n    var _this = this;\n\n    _classCallCheck(this, TetherClass);\n\n    _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);\n    this.position = this.position.bind(this);\n\n    tethers.push(this);\n\n    this.history = [];\n\n    this.setOptions(options, false);\n\n    TetherBase.modules.forEach(function (module) {\n      if (typeof module.initialize !== 'undefined') {\n        module.initialize.call(_this);\n      }\n    });\n\n    this.position();\n  }\n\n  _createClass(TetherClass, [{\n    key: 'getClass',\n    value: function getClass() {\n      var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n      var classes = this.options.classes;\n\n      if (typeof classes !== 'undefined' && classes[key]) {\n        return this.options.classes[key];\n      } else if (this.options.classPrefix) {\n        return this.options.classPrefix + '-' + key;\n      } else {\n        return key;\n      }\n    }\n  }, {\n    key: 'setOptions',\n    value: function setOptions(options) {\n      var _this2 = this;\n\n      var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n      var defaults = {\n        offset: '0 0',\n        targetOffset: '0 0',\n        targetAttachment: 'auto auto',\n        classPrefix: 'tether'\n      };\n\n      this.options = extend(defaults, options);\n\n      var _options = this.options;\n      var element = _options.element;\n      var target = _options.target;\n      var targetModifier = _options.targetModifier;\n\n      this.element = element;\n      this.target = target;\n      this.targetModifier = targetModifier;\n\n      if (this.target === 'viewport') {\n        this.target = document.body;\n        this.targetModifier = 'visible';\n      } else if (this.target === 'scroll-handle') {\n        this.target = document.body;\n        this.targetModifier = 'scroll-handle';\n      }\n\n      ['element', 'target'].forEach(function (key) {\n        if (typeof _this2[key] === 'undefined') {\n          throw new Error('Tether Error: Both element and target must be defined');\n        }\n\n        if (typeof _this2[key].jquery !== 'undefined') {\n          _this2[key] = _this2[key][0];\n        } else if (typeof _this2[key] === 'string') {\n          _this2[key] = document.querySelector(_this2[key]);\n        }\n      });\n\n      addClass(this.element, this.getClass('element'));\n      if (!(this.options.addTargetClasses === false)) {\n        addClass(this.target, this.getClass('target'));\n      }\n\n      if (!this.options.attachment) {\n        throw new Error('Tether Error: You must provide an attachment');\n      }\n\n      this.targetAttachment = parseAttachment(this.options.targetAttachment);\n      this.attachment = parseAttachment(this.options.attachment);\n      this.offset = parseOffset(this.options.offset);\n      this.targetOffset = parseOffset(this.options.targetOffset);\n\n      if (typeof this.scrollParents !== 'undefined') {\n        this.disable();\n      }\n\n      if (this.targetModifier === 'scroll-handle') {\n        this.scrollParents = [this.target];\n      } else {\n        this.scrollParents = getScrollParents(this.target);\n      }\n\n      if (!(this.options.enabled === false)) {\n        this.enable(pos);\n      }\n    }\n  }, {\n    key: 'getTargetBounds',\n    value: function getTargetBounds() {\n      if (typeof this.targetModifier !== 'undefined') {\n        if (this.targetModifier === 'visible') {\n          if (this.target === document.body) {\n            return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };\n          } else {\n            var bounds = getBounds(this.target);\n\n            var out = {\n              height: bounds.height,\n              width: bounds.width,\n              top: bounds.top,\n              left: bounds.left\n            };\n\n            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));\n            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));\n            out.height = Math.min(innerHeight, out.height);\n            out.height -= 2;\n\n            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));\n            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));\n            out.width = Math.min(innerWidth, out.width);\n            out.width -= 2;\n\n            if (out.top < pageYOffset) {\n              out.top = pageYOffset;\n            }\n            if (out.left < pageXOffset) {\n              out.left = pageXOffset;\n            }\n\n            return out;\n          }\n        } else if (this.targetModifier === 'scroll-handle') {\n          var bounds = undefined;\n          var target = this.target;\n          if (target === document.body) {\n            target = document.documentElement;\n\n            bounds = {\n              left: pageXOffset,\n              top: pageYOffset,\n              height: innerHeight,\n              width: innerWidth\n            };\n          } else {\n            bounds = getBounds(target);\n          }\n\n          var style = getComputedStyle(target);\n\n          var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;\n\n          var scrollBottom = 0;\n          if (hasBottomScroll) {\n            scrollBottom = 15;\n          }\n\n          var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;\n\n          var out = {\n            width: 15,\n            height: height * 0.975 * (height / target.scrollHeight),\n            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15\n          };\n\n          var fitAdj = 0;\n          if (height < 408 && this.target === document.body) {\n            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;\n          }\n\n          if (this.target !== document.body) {\n            out.height = Math.max(out.height, 24);\n          }\n\n          var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);\n          out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);\n\n          if (this.target === document.body) {\n            out.height = Math.max(out.height, 24);\n          }\n\n          return out;\n        }\n      } else {\n        return getBounds(this.target);\n      }\n    }\n  }, {\n    key: 'clearCache',\n    value: function clearCache() {\n      this._cache = {};\n    }\n  }, {\n    key: 'cache',\n    value: function cache(k, getter) {\n      // More than one module will often need the same DOM info, so\n      // we keep a cache which is cleared on each position call\n      if (typeof this._cache === 'undefined') {\n        this._cache = {};\n      }\n\n      if (typeof this._cache[k] === 'undefined') {\n        this._cache[k] = getter.call(this);\n      }\n\n      return this._cache[k];\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      var _this3 = this;\n\n      var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n      if (!(this.options.addTargetClasses === false)) {\n        addClass(this.target, this.getClass('enabled'));\n      }\n      addClass(this.element, this.getClass('enabled'));\n      this.enabled = true;\n\n      this.scrollParents.forEach(function (parent) {\n        if (parent !== _this3.target.ownerDocument) {\n          parent.addEventListener('scroll', _this3.position);\n        }\n      });\n\n      if (pos) {\n        this.position();\n      }\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      var _this4 = this;\n\n      removeClass(this.target, this.getClass('enabled'));\n      removeClass(this.element, this.getClass('enabled'));\n      this.enabled = false;\n\n      if (typeof this.scrollParents !== 'undefined') {\n        this.scrollParents.forEach(function (parent) {\n          parent.removeEventListener('scroll', _this4.position);\n        });\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this5 = this;\n\n      this.disable();\n\n      tethers.forEach(function (tether, i) {\n        if (tether === _this5) {\n          tethers.splice(i, 1);\n        }\n      });\n\n      // Remove any elements we were using for convenience from the DOM\n      if (tethers.length === 0) {\n        removeUtilElements();\n      }\n    }\n  }, {\n    key: 'updateAttachClasses',\n    value: function updateAttachClasses(elementAttach, targetAttach) {\n      var _this6 = this;\n\n      elementAttach = elementAttach || this.attachment;\n      targetAttach = targetAttach || this.targetAttachment;\n      var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];\n\n      if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {\n        // updateAttachClasses can be called more than once in a position call, so\n        // we need to clean up after ourselves such that when the last defer gets\n        // ran it doesn't add any extra classes from previous calls.\n        this._addAttachClasses.splice(0, this._addAttachClasses.length);\n      }\n\n      if (typeof this._addAttachClasses === 'undefined') {\n        this._addAttachClasses = [];\n      }\n      var add = this._addAttachClasses;\n\n      if (elementAttach.top) {\n        add.push(this.getClass('element-attached') + '-' + elementAttach.top);\n      }\n      if (elementAttach.left) {\n        add.push(this.getClass('element-attached') + '-' + elementAttach.left);\n      }\n      if (targetAttach.top) {\n        add.push(this.getClass('target-attached') + '-' + targetAttach.top);\n      }\n      if (targetAttach.left) {\n        add.push(this.getClass('target-attached') + '-' + targetAttach.left);\n      }\n\n      var all = [];\n      sides.forEach(function (side) {\n        all.push(_this6.getClass('element-attached') + '-' + side);\n        all.push(_this6.getClass('target-attached') + '-' + side);\n      });\n\n      defer(function () {\n        if (!(typeof _this6._addAttachClasses !== 'undefined')) {\n          return;\n        }\n\n        updateClasses(_this6.element, _this6._addAttachClasses, all);\n        if (!(_this6.options.addTargetClasses === false)) {\n          updateClasses(_this6.target, _this6._addAttachClasses, all);\n        }\n\n        delete _this6._addAttachClasses;\n      });\n    }\n  }, {\n    key: 'position',\n    value: function position() {\n      var _this7 = this;\n\n      var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n      // flushChanges commits the changes immediately, leave true unless you are positioning multiple\n      // tethers (in which case call Tether.Utils.flush yourself when you're done)\n\n      if (!this.enabled) {\n        return;\n      }\n\n      this.clearCache();\n\n      // Turn 'auto' attachments into the appropriate corner or edge\n      var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);\n\n      this.updateAttachClasses(this.attachment, targetAttachment);\n\n      var elementPos = this.cache('element-bounds', function () {\n        return getBounds(_this7.element);\n      });\n\n      var width = elementPos.width;\n      var height = elementPos.height;\n\n      if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n        var _lastSize = this.lastSize;\n\n        // We cache the height and width to make it possible to position elements that are\n        // getting hidden.\n        width = _lastSize.width;\n        height = _lastSize.height;\n      } else {\n        this.lastSize = { width: width, height: height };\n      }\n\n      var targetPos = this.cache('target-bounds', function () {\n        return _this7.getTargetBounds();\n      });\n      var targetSize = targetPos;\n\n      // Get an actual px offset from the attachment\n      var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });\n      var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);\n\n      var manualOffset = offsetToPx(this.offset, { width: width, height: height });\n      var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);\n\n      // Add the manually provided offset\n      offset = addOffset(offset, manualOffset);\n      targetOffset = addOffset(targetOffset, manualTargetOffset);\n\n      // It's now our goal to make (element position + offset) == (target position + target offset)\n      var left = targetPos.left + targetOffset.left - offset.left;\n      var top = targetPos.top + targetOffset.top - offset.top;\n\n      for (var i = 0; i < TetherBase.modules.length; ++i) {\n        var _module2 = TetherBase.modules[i];\n        var ret = _module2.position.call(this, {\n          left: left,\n          top: top,\n          targetAttachment: targetAttachment,\n          targetPos: targetPos,\n          elementPos: elementPos,\n          offset: offset,\n          targetOffset: targetOffset,\n          manualOffset: manualOffset,\n          manualTargetOffset: manualTargetOffset,\n          scrollbarSize: scrollbarSize,\n          attachment: this.attachment\n        });\n\n        if (ret === false) {\n          return false;\n        } else if (typeof ret === 'undefined' || typeof ret !== 'object') {\n          continue;\n        } else {\n          top = ret.top;\n          left = ret.left;\n        }\n      }\n\n      // We describe the position three different ways to give the optimizer\n      // a chance to decide the best possible way to position the element\n      // with the fewest repaints.\n      var next = {\n        // It's position relative to the page (absolute positioning when\n        // the element is a child of the body)\n        page: {\n          top: top,\n          left: left\n        },\n\n        // It's position relative to the viewport (fixed positioning)\n        viewport: {\n          top: top - pageYOffset,\n          bottom: pageYOffset - top - height + innerHeight,\n          left: left - pageXOffset,\n          right: pageXOffset - left - width + innerWidth\n        }\n      };\n\n      var doc = this.target.ownerDocument;\n      var win = doc.defaultView;\n\n      var scrollbarSize = undefined;\n      if (win.innerHeight > doc.documentElement.clientHeight) {\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n        next.viewport.bottom -= scrollbarSize.height;\n      }\n\n      if (win.innerWidth > doc.documentElement.clientWidth) {\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\n        next.viewport.right -= scrollbarSize.width;\n      }\n\n      if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {\n        // Absolute positioning in the body will be relative to the page, not the 'initial containing block'\n        next.page.bottom = doc.body.scrollHeight - top - height;\n        next.page.right = doc.body.scrollWidth - left - width;\n      }\n\n      if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {\n        (function () {\n          var offsetParent = _this7.cache('target-offsetparent', function () {\n            return getOffsetParent(_this7.target);\n          });\n          var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {\n            return getBounds(offsetParent);\n          });\n          var offsetParentStyle = getComputedStyle(offsetParent);\n          var offsetParentSize = offsetPosition;\n\n          var offsetBorder = {};\n          ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {\n            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);\n          });\n\n          offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;\n          offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;\n\n          if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {\n            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {\n              // We're within the visible part of the target's scroll parent\n              var scrollTop = offsetParent.scrollTop;\n              var scrollLeft = offsetParent.scrollLeft;\n\n              // It's position relative to the target's offset parent (absolute positioning when\n              // the element is moved to be a child of the target's offset parent).\n              next.offset = {\n                top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,\n                left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left\n              };\n            }\n          }\n        })();\n      }\n\n      // We could also travel up the DOM and try each containing context, rather than only\n      // looking at the body, but we're gonna get diminishing returns.\n\n      this.move(next);\n\n      this.history.unshift(next);\n\n      if (this.history.length > 3) {\n        this.history.pop();\n      }\n\n      if (flushChanges) {\n        flush();\n      }\n\n      return true;\n    }\n\n    // THE ISSUE\n  }, {\n    key: 'move',\n    value: function move(pos) {\n      var _this8 = this;\n\n      if (!(typeof this.element.parentNode !== 'undefined')) {\n        return;\n      }\n\n      var same = {};\n\n      for (var type in pos) {\n        same[type] = {};\n\n        for (var key in pos[type]) {\n          var found = false;\n\n          for (var i = 0; i < this.history.length; ++i) {\n            var point = this.history[i];\n            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            same[type][key] = true;\n          }\n        }\n      }\n\n      var css = { top: '', left: '', right: '', bottom: '' };\n\n      var transcribe = function transcribe(_same, _pos) {\n        var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';\n        var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;\n        if (gpu !== false) {\n          var yPos = undefined,\n              xPos = undefined;\n          if (_same.top) {\n            css.top = 0;\n            yPos = _pos.top;\n          } else {\n            css.bottom = 0;\n            yPos = -_pos.bottom;\n          }\n\n          if (_same.left) {\n            css.left = 0;\n            xPos = _pos.left;\n          } else {\n            css.right = 0;\n            xPos = -_pos.right;\n          }\n\n          if (window.matchMedia) {\n            // HubSpot/tether#207\n            var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;\n            if (!retina) {\n              xPos = Math.round(xPos);\n              yPos = Math.round(yPos);\n            }\n          }\n\n          css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';\n\n          if (transformKey !== 'msTransform') {\n            // The Z transform will keep this in the GPU (faster, and prevents artifacts),\n            // but IE9 doesn't support 3d transforms and will choke.\n            css[transformKey] += \" translateZ(0)\";\n          }\n        } else {\n          if (_same.top) {\n            css.top = _pos.top + 'px';\n          } else {\n            css.bottom = _pos.bottom + 'px';\n          }\n\n          if (_same.left) {\n            css.left = _pos.left + 'px';\n          } else {\n            css.right = _pos.right + 'px';\n          }\n        }\n      };\n\n      var moved = false;\n      if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {\n        css.position = 'absolute';\n        transcribe(same.page, pos.page);\n      } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {\n        css.position = 'fixed';\n        transcribe(same.viewport, pos.viewport);\n      } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {\n        (function () {\n          css.position = 'absolute';\n          var offsetParent = _this8.cache('target-offsetparent', function () {\n            return getOffsetParent(_this8.target);\n          });\n\n          if (getOffsetParent(_this8.element) !== offsetParent) {\n            defer(function () {\n              _this8.element.parentNode.removeChild(_this8.element);\n              offsetParent.appendChild(_this8.element);\n            });\n          }\n\n          transcribe(same.offset, pos.offset);\n          moved = true;\n        })();\n      } else {\n        css.position = 'absolute';\n        transcribe({ top: true, left: true }, pos.page);\n      }\n\n      if (!moved) {\n        if (this.options.bodyElement) {\n          if (this.element.parentNode !== this.options.bodyElement) {\n            this.options.bodyElement.appendChild(this.element);\n          }\n        } else {\n          var offsetParentIsBody = true;\n          var currentNode = this.element.parentNode;\n          while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {\n            if (getComputedStyle(currentNode).position !== 'static') {\n              offsetParentIsBody = false;\n              break;\n            }\n\n            currentNode = currentNode.parentNode;\n          }\n\n          if (!offsetParentIsBody) {\n            this.element.parentNode.removeChild(this.element);\n            this.element.ownerDocument.body.appendChild(this.element);\n          }\n        }\n      }\n\n      // Any css change will trigger a repaint, so let's avoid one if nothing changed\n      var writeCSS = {};\n      var write = false;\n      for (var key in css) {\n        var val = css[key];\n        var elVal = this.element.style[key];\n\n        if (elVal !== val) {\n          write = true;\n          writeCSS[key] = val;\n        }\n      }\n\n      if (write) {\n        defer(function () {\n          extend(_this8.element.style, writeCSS);\n          _this8.trigger('repositioned');\n        });\n      }\n    }\n  }]);\n\n  return TetherClass;\n})(Evented);\n\nTetherClass.modules = [];\n\nTetherBase.position = position;\n\nvar Tether = extend(TetherClass, TetherBase);\n/* globals TetherBase */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar extend = _TetherBase$Utils.extend;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\n\nvar BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];\n\nfunction getBoundingRect(tether, to) {\n  if (to === 'scrollParent') {\n    to = tether.scrollParents[0];\n  } else if (to === 'window') {\n    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];\n  }\n\n  if (to === document) {\n    to = to.documentElement;\n  }\n\n  if (typeof to.nodeType !== 'undefined') {\n    (function () {\n      var node = to;\n      var size = getBounds(to);\n      var pos = size;\n      var style = getComputedStyle(to);\n\n      to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];\n\n      // Account any parent Frames scroll offset\n      if (node.ownerDocument !== document) {\n        var win = node.ownerDocument.defaultView;\n        to[0] += win.pageXOffset;\n        to[1] += win.pageYOffset;\n        to[2] += win.pageXOffset;\n        to[3] += win.pageYOffset;\n      }\n\n      BOUNDS_FORMAT.forEach(function (side, i) {\n        side = side[0].toUpperCase() + side.substr(1);\n        if (side === 'Top' || side === 'Left') {\n          to[i] += parseFloat(style['border' + side + 'Width']);\n        } else {\n          to[i] -= parseFloat(style['border' + side + 'Width']);\n        }\n      });\n    })();\n  }\n\n  return to;\n}\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var _this = this;\n\n    var top = _ref.top;\n    var left = _ref.left;\n    var targetAttachment = _ref.targetAttachment;\n\n    if (!this.options.constraints) {\n      return true;\n    }\n\n    var _cache = this.cache('element-bounds', function () {\n      return getBounds(_this.element);\n    });\n\n    var height = _cache.height;\n    var width = _cache.width;\n\n    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\n      var _lastSize = this.lastSize;\n\n      // Handle the item getting hidden as a result of our positioning without glitching\n      // the classes in and out\n      width = _lastSize.width;\n      height = _lastSize.height;\n    }\n\n    var targetSize = this.cache('target-bounds', function () {\n      return _this.getTargetBounds();\n    });\n\n    var targetHeight = targetSize.height;\n    var targetWidth = targetSize.width;\n\n    var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];\n\n    this.options.constraints.forEach(function (constraint) {\n      var outOfBoundsClass = constraint.outOfBoundsClass;\n      var pinnedClass = constraint.pinnedClass;\n\n      if (outOfBoundsClass) {\n        allClasses.push(outOfBoundsClass);\n      }\n      if (pinnedClass) {\n        allClasses.push(pinnedClass);\n      }\n    });\n\n    allClasses.forEach(function (cls) {\n      ['left', 'top', 'right', 'bottom'].forEach(function (side) {\n        allClasses.push(cls + '-' + side);\n      });\n    });\n\n    var addClasses = [];\n\n    var tAttachment = extend({}, targetAttachment);\n    var eAttachment = extend({}, this.attachment);\n\n    this.options.constraints.forEach(function (constraint) {\n      var to = constraint.to;\n      var attachment = constraint.attachment;\n      var pin = constraint.pin;\n\n      if (typeof attachment === 'undefined') {\n        attachment = '';\n      }\n\n      var changeAttachX = undefined,\n          changeAttachY = undefined;\n      if (attachment.indexOf(' ') >= 0) {\n        var _attachment$split = attachment.split(' ');\n\n        var _attachment$split2 = _slicedToArray(_attachment$split, 2);\n\n        changeAttachY = _attachment$split2[0];\n        changeAttachX = _attachment$split2[1];\n      } else {\n        changeAttachX = changeAttachY = attachment;\n      }\n\n      var bounds = getBoundingRect(_this, to);\n\n      if (changeAttachY === 'target' || changeAttachY === 'both') {\n        if (top < bounds[1] && tAttachment.top === 'top') {\n          top += targetHeight;\n          tAttachment.top = 'bottom';\n        }\n\n        if (top + height > bounds[3] && tAttachment.top === 'bottom') {\n          top -= targetHeight;\n          tAttachment.top = 'top';\n        }\n      }\n\n      if (changeAttachY === 'together') {\n        if (tAttachment.top === 'top') {\n          if (eAttachment.top === 'bottom' && top < bounds[1]) {\n            top += targetHeight;\n            tAttachment.top = 'bottom';\n\n            top += height;\n            eAttachment.top = 'top';\n          } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {\n            top -= height - targetHeight;\n            tAttachment.top = 'bottom';\n\n            eAttachment.top = 'bottom';\n          }\n        }\n\n        if (tAttachment.top === 'bottom') {\n          if (eAttachment.top === 'top' && top + height > bounds[3]) {\n            top -= targetHeight;\n            tAttachment.top = 'top';\n\n            top -= height;\n            eAttachment.top = 'bottom';\n          } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {\n            top += height - targetHeight;\n            tAttachment.top = 'top';\n\n            eAttachment.top = 'top';\n          }\n        }\n\n        if (tAttachment.top === 'middle') {\n          if (top + height > bounds[3] && eAttachment.top === 'top') {\n            top -= height;\n            eAttachment.top = 'bottom';\n          } else if (top < bounds[1] && eAttachment.top === 'bottom') {\n            top += height;\n            eAttachment.top = 'top';\n          }\n        }\n      }\n\n      if (changeAttachX === 'target' || changeAttachX === 'both') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          left += targetWidth;\n          tAttachment.left = 'right';\n        }\n\n        if (left + width > bounds[2] && tAttachment.left === 'right') {\n          left -= targetWidth;\n          tAttachment.left = 'left';\n        }\n      }\n\n      if (changeAttachX === 'together') {\n        if (left < bounds[0] && tAttachment.left === 'left') {\n          if (eAttachment.left === 'right') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left += width;\n            eAttachment.left = 'left';\n          } else if (eAttachment.left === 'left') {\n            left += targetWidth;\n            tAttachment.left = 'right';\n\n            left -= width;\n            eAttachment.left = 'right';\n          }\n        } else if (left + width > bounds[2] && tAttachment.left === 'right') {\n          if (eAttachment.left === 'left') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (eAttachment.left === 'right') {\n            left -= targetWidth;\n            tAttachment.left = 'left';\n\n            left += width;\n            eAttachment.left = 'left';\n          }\n        } else if (tAttachment.left === 'center') {\n          if (left + width > bounds[2] && eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (left < bounds[0] && eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          }\n        }\n      }\n\n      if (changeAttachY === 'element' || changeAttachY === 'both') {\n        if (top < bounds[1] && eAttachment.top === 'bottom') {\n          top += height;\n          eAttachment.top = 'top';\n        }\n\n        if (top + height > bounds[3] && eAttachment.top === 'top') {\n          top -= height;\n          eAttachment.top = 'bottom';\n        }\n      }\n\n      if (changeAttachX === 'element' || changeAttachX === 'both') {\n        if (left < bounds[0]) {\n          if (eAttachment.left === 'right') {\n            left += width;\n            eAttachment.left = 'left';\n          } else if (eAttachment.left === 'center') {\n            left += width / 2;\n            eAttachment.left = 'left';\n          }\n        }\n\n        if (left + width > bounds[2]) {\n          if (eAttachment.left === 'left') {\n            left -= width;\n            eAttachment.left = 'right';\n          } else if (eAttachment.left === 'center') {\n            left -= width / 2;\n            eAttachment.left = 'right';\n          }\n        }\n      }\n\n      if (typeof pin === 'string') {\n        pin = pin.split(',').map(function (p) {\n          return p.trim();\n        });\n      } else if (pin === true) {\n        pin = ['top', 'left', 'right', 'bottom'];\n      }\n\n      pin = pin || [];\n\n      var pinned = [];\n      var oob = [];\n\n      if (top < bounds[1]) {\n        if (pin.indexOf('top') >= 0) {\n          top = bounds[1];\n          pinned.push('top');\n        } else {\n          oob.push('top');\n        }\n      }\n\n      if (top + height > bounds[3]) {\n        if (pin.indexOf('bottom') >= 0) {\n          top = bounds[3] - height;\n          pinned.push('bottom');\n        } else {\n          oob.push('bottom');\n        }\n      }\n\n      if (left < bounds[0]) {\n        if (pin.indexOf('left') >= 0) {\n          left = bounds[0];\n          pinned.push('left');\n        } else {\n          oob.push('left');\n        }\n      }\n\n      if (left + width > bounds[2]) {\n        if (pin.indexOf('right') >= 0) {\n          left = bounds[2] - width;\n          pinned.push('right');\n        } else {\n          oob.push('right');\n        }\n      }\n\n      if (pinned.length) {\n        (function () {\n          var pinnedClass = undefined;\n          if (typeof _this.options.pinnedClass !== 'undefined') {\n            pinnedClass = _this.options.pinnedClass;\n          } else {\n            pinnedClass = _this.getClass('pinned');\n          }\n\n          addClasses.push(pinnedClass);\n          pinned.forEach(function (side) {\n            addClasses.push(pinnedClass + '-' + side);\n          });\n        })();\n      }\n\n      if (oob.length) {\n        (function () {\n          var oobClass = undefined;\n          if (typeof _this.options.outOfBoundsClass !== 'undefined') {\n            oobClass = _this.options.outOfBoundsClass;\n          } else {\n            oobClass = _this.getClass('out-of-bounds');\n          }\n\n          addClasses.push(oobClass);\n          oob.forEach(function (side) {\n            addClasses.push(oobClass + '-' + side);\n          });\n        })();\n      }\n\n      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {\n        eAttachment.left = tAttachment.left = false;\n      }\n      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {\n        eAttachment.top = tAttachment.top = false;\n      }\n\n      if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {\n        _this.updateAttachClasses(eAttachment, tAttachment);\n        _this.trigger('update', {\n          attachment: eAttachment,\n          targetAttachment: tAttachment\n        });\n      }\n    });\n\n    defer(function () {\n      if (!(_this.options.addTargetClasses === false)) {\n        updateClasses(_this.target, addClasses, allClasses);\n      }\n      updateClasses(_this.element, addClasses, allClasses);\n    });\n\n    return { top: top, left: left };\n  }\n});\n/* globals TetherBase */\n\n'use strict';\n\nvar _TetherBase$Utils = TetherBase.Utils;\nvar getBounds = _TetherBase$Utils.getBounds;\nvar updateClasses = _TetherBase$Utils.updateClasses;\nvar defer = _TetherBase$Utils.defer;\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var _this = this;\n\n    var top = _ref.top;\n    var left = _ref.left;\n\n    var _cache = this.cache('element-bounds', function () {\n      return getBounds(_this.element);\n    });\n\n    var height = _cache.height;\n    var width = _cache.width;\n\n    var targetPos = this.getTargetBounds();\n\n    var bottom = top + height;\n    var right = left + width;\n\n    var abutted = [];\n    if (top <= targetPos.bottom && bottom >= targetPos.top) {\n      ['left', 'right'].forEach(function (side) {\n        var targetPosSide = targetPos[side];\n        if (targetPosSide === left || targetPosSide === right) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    if (left <= targetPos.right && right >= targetPos.left) {\n      ['top', 'bottom'].forEach(function (side) {\n        var targetPosSide = targetPos[side];\n        if (targetPosSide === top || targetPosSide === bottom) {\n          abutted.push(side);\n        }\n      });\n    }\n\n    var allClasses = [];\n    var addClasses = [];\n\n    var sides = ['left', 'top', 'right', 'bottom'];\n    allClasses.push(this.getClass('abutted'));\n    sides.forEach(function (side) {\n      allClasses.push(_this.getClass('abutted') + '-' + side);\n    });\n\n    if (abutted.length) {\n      addClasses.push(this.getClass('abutted'));\n    }\n\n    abutted.forEach(function (side) {\n      addClasses.push(_this.getClass('abutted') + '-' + side);\n    });\n\n    defer(function () {\n      if (!(_this.options.addTargetClasses === false)) {\n        updateClasses(_this.target, addClasses, allClasses);\n      }\n      updateClasses(_this.element, addClasses, allClasses);\n    });\n\n    return true;\n  }\n});\n/* globals TetherBase */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nTetherBase.modules.push({\n  position: function position(_ref) {\n    var top = _ref.top;\n    var left = _ref.left;\n\n    if (!this.options.shift) {\n      return;\n    }\n\n    var shift = this.options.shift;\n    if (typeof this.options.shift === 'function') {\n      shift = this.options.shift.call(this, { top: top, left: left });\n    }\n\n    var shiftTop = undefined,\n        shiftLeft = undefined;\n    if (typeof shift === 'string') {\n      shift = shift.split(' ');\n      shift[1] = shift[1] || shift[0];\n\n      var _shift = shift;\n\n      var _shift2 = _slicedToArray(_shift, 2);\n\n      shiftTop = _shift2[0];\n      shiftLeft = _shift2[1];\n\n      shiftTop = parseFloat(shiftTop, 10);\n      shiftLeft = parseFloat(shiftLeft, 10);\n    } else {\n      shiftTop = shift.top;\n      shiftLeft = shift.left;\n    }\n\n    top += shiftTop;\n    left += shiftLeft;\n\n    return { top: top, left: left };\n  }\n});\nreturn Tether;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tether/dist/js/tether.js\n// module id = 6BCL\n// module chunks = 5"],"sourceRoot":""}